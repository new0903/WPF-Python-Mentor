[
  {
    "Name": "Пролог: Контракт от Лютика",
    "Description": [
      { "Header": "Таверна 'Три ворона'" },
      { "Simple": "Лютик, вечно пьяный бард, хлопает тебя по плечу. 'Слушай, друг, Геральт пропал! Отправился на охоту за графом-вурдалаком и не вернулся. Цири поручила мне найти помощника. Освой основы Python - и вместе мы его найдем!'" },
      { "Header": "Магия input() и print()" },
      { "Simple": "Вот как работают наши основные заклинания:\n\nprint('текст') - выводит текст на экран\nпеременная = input('подсказка: ') - показывает подсказку и ждет ввода пользователя\n\nНапример:\nname = input('Как тебя зовут: ')\nprint('Привет, ' + name)" },
      { "Simple": "Важно: input() ВСЕГДА возвращает строку. Даже если введут число, оно будет строкой '5', а не числом 5." },
      { "Header": "Твое первое задание" },
      { "Simple": "'Начнем с простого,' - говорит Лютик, доставая лютню. 'Создай программу, которая спросит у трактирщика о последних следах Геральта и красиво оформит донесение для Цири.'" }
    ],
    "Option": [],
    "CorrectAnswer": [],
    "SupportHint": "",
    "SupportAnswer": "",
    "IsCode": false
  },
  {
    "Name": "Задание 1: Опрос трактирщика",
    "Description": [
      { "Header": "Расспросы в таверне" },
      { "Simple": "Старый трактирщик протирает кружку: 'Ведьмак? А, тот беловолосый... Он спрашивал дорогу к старому замку.'" },
      { "Simple": "Создай программу, которая:\n\n1. Спросит через input() имя свидетеля (покажет текст 'Имя свидетеля: ')\n2. Спросит через input() что видел свидетель (покажет текст 'Что видел: ')\n3. Спросит через input() когда это было (покажет текст 'Когда: ')\n4. Выведет через print() оформленный отчет для Цири" },
      { "Simple": "Пример того, что должна вывести программа:\n--- ДОНЕСЕНИЕ ДЛЯ ЦИРИ ---\nСвидетель: [имя]\nПоказания: [что видел]\nВремя: [когда]\n--- КОНЕЦ ДОНЕСЕНИЯ ---" }
    ],
    "Option": ["Золтан", "видел Геральта на дороге к замку", "три дня назад"],
    "CorrectAnswer": [
      "Имя свидетеля: ",
      "Что видел: ",
      "Когда: ",
      "--- ДОНЕСЕНИЕ ДЛЯ ЦИРИ ---",
      "Свидетель: Золтан",
      "Показания: видел Геральта на дороге к замку",
      "Время: три дня назад",
      "--- КОНЕЦ ДОНЕСЕНИЯ ---"
    ],
    "SupportHint": "Используй три разных input() с подсказками и один большой print() с переносами строк \\n",
    "SupportAnswer": "witness = input('Имя свидетеля: ')\nsighting = input('Что видел: ')\ntime = input('Когда: ')\nprint('--- ДОНЕСЕНИЕ ДЛЯ ЦИРИ ---\\nСвидетель: ' + witness + '\\nПоказания: ' + sighting + '\\nВремя: ' + time + '\\n--- КОНЕЦ ДОНЕСЕНИЯ ---')",
    "IsCode": true
  },
  {
    "Name": "Задание 2: Встреча с Цири",
    "Description": [
      { "Header": "Лагерь в лесу" },
      { "Simple": "Цири, с лицом, искаженным беспокойством, изучает твой отчет: 'Хорошо, но нужно больше деталей! Граф-вурдалак не простой противник. Узнай его слабости!'" },
      { "Simple": "Создай программу для сбора информации о вурдалаке:\n\n1. Спроси через input() слабости чудовища (покажет текст 'Слабости вурдалака: ')\n2. Спроси через input() место обитания (покажет текст 'Место обитания: ')\n3. Спроси через input() время активности (покажет текст 'Активен: ')\n4. Выведи сводку для охоты" },
      { "Simple": "Программа должна вывести:\n--- СВОДКА О ВУРДАЛАКЕ ---\nСлабости: [слабости]\nЛогово: [место]\nОхотится: [время]\nОсторожно: очень опасен!" }
    ],
    "Option": ["серебро, чеснок", "старый замок на холме", "ночью"],
    "CorrectAnswer": [
      "Слабости вурдалака: ",
      "Место обитания: ",
      "Активен: ",
      "--- СВОДКА О ВУРДАЛАКЕ ---",
      "Слабости: серебро, чеснок",
      "Логово: старый замок на холме",
      "Охотится: ночью",
      "Осторожно: очень опасен!"
    ],
    "SupportHint": "Каждый input() должен иметь свою подсказку. В print() используй \\n для переноса строк.",
    "SupportAnswer": "weakness = input('Слабости вурдалака: ')\nlair = input('Место обитания: ')\nactive = input('Активен: ')\nprint('--- СВОДКА О ВУРДАЛАКЕ ---\\nСлабости: ' + weakness + '\\nЛогово: ' + lair + '\\nОхотится: ' + active + '\\nОсторожно: очень опасен!')",
    "IsCode": true
  },
  {
    "Name": "Задание 3: Подготовка зелий",
    "Description": [
      { "Header": "Лаборатория Геральта" },
      { "Simple": "Лютик роется в ведьмачьих припасах: 'Черт возьми! Геральт не оставил инструкций по зельям! Нужно записать рецепты для будущих охотников.'" },
      { "Simple": "Создай программу для записи рецептов зелий:\n\n1. Спроси через input() название зелья (покажет текст 'Название зелья: ')\n2. Спроси через input() основной ингредиент (покажет текст 'Главный ингредиент: ')\n3. Спроси через input() время приготовления (покажет текст 'Время варки: ')\n4. Спроси через input() эффект (покажет текст 'Эффект: ')\n5. Выведи красивый рецепт" },
      { "Simple": "Вывод программы должен выглядеть так:\n✨ РЕЦЕПТ ВЕДЬМАКА ✨\nЗелье: [название]\nИнгредиент: [ингредиент]\nГотовится: [время]\nДействие: [эффект]\n--- Хранить в темноте ---" }
    ],
    "Option": ["Кот", "глаз кошки", "2 часа", "ночное зрение"],
    "CorrectAnswer": [
      "Название зелья: ",
      "Главный ингредиент: ",
      "Время варки: ",
      "Эффект: ",
      "✨ РЕЦЕПТ ВЕДЬМАКА ✨",
      "Зелье: Кот",
      "Ингредиент: глаз кошки",
      "Готовится: 2 часа",
      "Действие: ночное зрение",
      "--- Хранить в темноте ---"
    ],
    "SupportHint": "Используй 4 input() с разными подсказками и один большой print() с множеством \\n",
    "SupportAnswer": "potion = input('Название зелья: ')\ningredient = input('Главный ингредиент: ')\ntime = input('Время варки: ')\neffect = input('Эффект: ')\nprint('✨ РЕЦЕПТ ВЕДЬМАКА ✨\\nЗелье: ' + potion + '\\nИнгредиент: ' + ingredient + '\\nГотовится: ' + time + '\\nДействие: ' + effect + '\\n--- Хранить в темноте ---')",
    "IsCode": true
  },
  {
    "Name": "Задание 4: Расчет награды за спасение",
    "Description": [
      { "Header": "Переговоры с деревней" },
      { "Simple": "Староста деревни торгуется: 'Спасете Геральта и убьете вурдалака - заплатим! Но сначала рассчитайте стоимость операции.'" },
      { "Simple": "Создай программу для расчета награды:\n\n1. Спроси через input() количество дней поисков (покажет текст 'Дни поисков: ')\n2. Спроси через input() количество зелий (покажет текст 'Зелья: ')\n3. Спроси через input() сложность задания (покажет текст 'Сложность (1-10): ')\n4. Рассчитай награду: 200 крон за день + 50 крон за зелье + 100 крон за единицу сложности\n5. Выведи итоговый счет" },
      { "Simple": "Программа должна вывести:\n--- СЧЕТ ЗА СПАСЕНИЕ ---\nДни: [дни]\nЗелья: [зелья]\nСложность: [сложность]\nИтого: [сумма] крон\nДа пребудет с тобой удача!" }
    ],
    "Option": ["5", "8", "9"],
    "CorrectAnswer": [
      "Дни поисков: ",
      "Зелья: ",
      "Сложность (1-10): ",
      "--- СЧЕТ ЗА СПАСЕНИЕ ---",
      "Дни: 5",
      "Зелья: 8",
      "Сложность: 9",
      "Итого: 1850 крон",
      "Да пребудет с тобой удача!"
    ],
    "SupportHint": "Не забудь преобразовать input() в int() для расчетов: int(input('текст'))",
    "SupportAnswer": "days = int(input('Дни поисков: '))\npotions = int(input('Зелья: '))\ndifficulty = int(input('Сложность (1-10): '))\ntotal = days * 200 + potions * 50 + difficulty * 100\nprint('--- СЧЕТ ЗА СПАСЕНИЕ ---\\nДни: ' + str(days) + '\\nЗелья: ' + str(potions) + '\\nСложность: ' + str(difficulty) + '\\nИтого: ' + str(total) + ' крон\\nДа пребудет с тобой удача!')",
    "IsCode": true
  },
  {
    "Name": "Задание 5: Финальный отчет для императора",
    "Description": [
      { "Header": "Дворец в Нильфгаарде" },
      { "Simple": "Император Эмгыр требует полный отчет: 'Вы спасли моего внука Геральта? Предоставьте детали операции!'" },
      { "Simple": "Создай программу для генерации официального отчета:\n\n1. Спроси через input() результат операции (покажет текст 'Результат: ')\n2. Спроси через input() состояние Геральта (покажет текст 'Состояние Геральта: ')\n3. Спроси через input() судьбу вурдалака (покажет текст 'Судьба вурдалака: ')\n4. Спроси через input() потери (покажет текст 'Потери: ')\n5. Спроси через input() рекомендации (покажет текст 'Рекомендации: ')\n6. Выведи официальный документ" },
      { "Simple": "Вывод программы должен быть таким:\n📜 ОФИЦИАЛЬНЫЙ РАПОРТ 📜\nИмператору Эмгыру\nРезультат: [результат]\nГеральт: [состояние]\nВурдалак: [судьба]\nПотери: [потери]\nРекомендации: [рекомендации]\nДа будет свет Империи!" }
    ],
    "Option": ["успех", "ранен, но жив", "уничтожен", "3 крестьянина", "укрепить охрану замка"],
    "CorrectAnswer": [
      "Результат: ",
      "Состояние Геральта: ",
      "Судьба вурдалака: ",
      "Потери: ",
      "Рекомендации: ",
      "📜 ОФИЦИАЛЬНЫЙ РАПОРТ 📜",
      "Императору Эмгыру",
      "Результат: успех",
      "Геральт: ранен, но жив",
      "Вурдалак: уничтожен",
      "Потери: 3 крестьянина",
      "Рекомендации: укрепить охрану замка",
      "Да будет свет Империи!"
    ],
    "SupportHint": "Используй 5 input() с подсказками и один большой print() с множеством \\n для красивого оформления",
    "SupportAnswer": "result = input('Результат: ')\nstate = input('Состояние Геральта: ')\nfate = input('Судьба вурдалака: ')\nlosses = input('Потери: ')\nadvice = input('Рекомендации: ')\nprint('📜 ОФИЦИАЛЬНЫЙ РАПОРТ 📜\\nИмператору Эмгыру\\nРезультат: ' + result + '\\nГеральт: ' + state + '\\nВурдалак: ' + fate + '\\nПотери: ' + losses + '\\nРекомендации: ' + advice + '\\nДа будет свет Империи!')",
    "IsCode": true
  },
  {
    "Name": "Эпилог: Возвращение героя",
    "Description": [
      { "Header": "Ведьмачья крепость Каэр Морхен" },
      { "Simple": "Геральт, перевязанный, но живой, поднимает кружку: 'Спасибо за помощь. Ты хорошо освоил основы - input() чтобы слышать мир, print() чтобы отвечать ему.'" },
      { "Header": "Чему ты научился:" },
      { "Simple": "• input('подсказка') - задает вопрос и ждет ответ\n• print('текст') - выводит информацию\n• input() всегда возвращает строки\n• Можно комбинировать текст в print()\n• Важно давать понятные подсказки в input()" },
      { "Header": "Новые горизонты" },
      { "Simple": "Цири улыбается: 'Теперь ты готов к изучению переменных и типов данных. Помни - даже великие ведьмаки начинали с основ.' Лютик наигрывает победную мелодию на лютне." }
    ],
    "Option": [],
    "CorrectAnswer": [],
    "SupportHint": "",
    "SupportAnswer": "",
    "IsCode": false
  }
]